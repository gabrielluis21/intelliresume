// Mocks generated by Mockito 5.4.6 from annotations
// in intelliresume/test/data/repositories/user_profile_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:intelliresume/data/datasources/local/local_user_profile_ds.dart'
    as _i6;
import 'package:intelliresume/data/datasources/remote/auth_resume_ds.dart'
    as _i2;
import 'package:intelliresume/data/datasources/remote/remote_user_profile_ds.dart'
    as _i3;
import 'package:intelliresume/domain/entities/user_profile.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthService_0 extends _i1.SmartFake implements _i2.AuthService {
  _FakeAuthService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RemoteUserProfileDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteUserProfileDataSource extends _i1.Mock
    implements _i3.RemoteUserProfileDataSource {
  MockRemoteUserProfileDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthService get authService =>
      (super.noSuchMethod(
            Invocation.getter(#authService),
            returnValue: _FakeAuthService_0(
              this,
              Invocation.getter(#authService),
            ),
          )
          as _i2.AuthService);

  @override
  _i4.Future<_i5.UserProfile?> fetchProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#fetchProfile, [uid]),
            returnValue: _i4.Future<_i5.UserProfile?>.value(),
          )
          as _i4.Future<_i5.UserProfile?>);

  @override
  _i4.Future<void> saveProfile(_i5.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#saveProfile, [profile]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProfile, [uid]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> verifyProfileEmail() =>
      (super.noSuchMethod(
            Invocation.method(#verifyProfileEmail, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Stream<_i5.UserProfile> watchProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#watchProfile, [uid]),
            returnValue: _i4.Stream<_i5.UserProfile>.empty(),
          )
          as _i4.Stream<_i5.UserProfile>);

  @override
  _i4.Future<void> updateProfile(_i5.UserProfile? profile) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [profile]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [LocalUserProfileDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalUserProfileDataSource extends _i1.Mock
    implements _i6.LocalUserProfileDataSource {
  MockLocalUserProfileDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveProfile(String? uid, Map<String, dynamic>? data) =>
      (super.noSuchMethod(
            Invocation.method(#saveProfile, [uid, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Map<String, dynamic>?> fetchProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#fetchProfile, [uid]),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Stream<_i5.UserProfile> watchProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#watchProfile, [uid]),
            returnValue: _i4.Stream<_i5.UserProfile>.empty(),
          )
          as _i4.Stream<_i5.UserProfile>);

  @override
  _i4.Future<void> deleteProfile(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#deleteProfile, [uid]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
